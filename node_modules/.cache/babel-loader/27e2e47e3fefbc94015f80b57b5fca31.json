{"ast":null,"code":"var _jsxFileName = \"/home/saif/Desktop/projects/store/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailproducts: detailProduct,\n      cart: [],\n      modelOpen: false,\n      modelProdcut: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      storeProducts.forEach(item => {\n        const update = { ...item\n        };\n        products = [...products, update];\n      });\n      this.setState(() => {\n        return {\n          products: products\n        };\n      });\n    };\n\n    this.handlegetitem = id => {\n      const prodcutId = this.state.products.find(item => item.id === id);\n      return prodcutId;\n    };\n\n    this.handleDetail = id => {\n      const product = this.handlegetitem(id);\n      this.setState(() => {\n        return {\n          detailproducts: product\n        };\n      });\n    };\n\n    this.handleaddTocart = id => {\n      let tempProducts = [...this.state.products];\n      const productIndex = tempProducts.indexOf(this.handlegetitem(id));\n      const product = tempProducts[productIndex];\n      product.count = 1;\n      product.inCart = true;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => this.handleaddtotal());\n    };\n\n    this.handleopenModel = id => {\n      const product = this.handlegetitem(id);\n      this.setState(() => {\n        return {\n          modelProdcut: product,\n          modelOpen: true\n        };\n      });\n    };\n\n    this.hadnlecloseModel = () => {\n      this.setState({\n        modelOpen: false\n      });\n    };\n\n    this.handleincrement = id => {\n      let tempcart = [...this.state.cart];\n      const productfind = tempcart.find(item => item.id === id);\n      const productindex = tempcart.indexOf(productfind);\n      const product = tempcart[productindex];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempcart]\n        };\n      }, () => {\n        this.handleaddtotal();\n      });\n    };\n\n    this.handledecrement = id => {\n      let temcart = [...this.state.cart];\n      const prodcutfind = temcart.find(item => item.id === id);\n      const prodcutindex = temcart.indexOf(prodcutfind);\n      const product = temcart[prodcutindex];\n      product.count = product.count - 1;\n    };\n\n    this.handleremoveItem = id => {\n      let tempprodut = [...this.state.products];\n      let tempcart = [...this.state.cart];\n      tempcart = tempcart.filter(item => item.id !== id);\n      const index = tempprodut.indexOf(this.handlegetitem(id));\n      let removeitem = tempprodut[index];\n      removeitem.inCart = false;\n      removeitem.price = 0;\n      removeitem.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempcart],\n          products: [...tempprodut]\n        };\n      }, () => {\n        this.handleaddtotal();\n      });\n    };\n\n    this.handleclear = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.handleaddtotal();\n      });\n    };\n\n    this.handleaddtotal = () => {\n      let total = 0;\n      this.state.cart.map(item => total += item.total);\n      const tax = total * 0.1;\n      const parsetex = parseFloat(tax.toFixed(2));\n      const totlaal = total + parsetex;\n      this.setState({\n        cartSubTotal: total,\n        cartTax: parsetex,\n        cartTotal: totlaal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        handleaddTocart: this.handleaddTocart,\n        handleopen: this.handleopenModel,\n        handleclose: this.hadnlecloseModel,\n        increment: this.handleincrement,\n        decrement: this.handledecrement,\n        removeItem: this.handleremoveItem,\n        clear: this.handleclear\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/saif/Desktop/projects/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","detailproducts","cart","modelOpen","modelProdcut","cartSubTotal","cartTax","cartTotal","setProducts","forEach","item","update","setState","handlegetitem","id","prodcutId","find","handleDetail","product","handleaddTocart","tempProducts","productIndex","indexOf","count","inCart","price","total","handleaddtotal","handleopenModel","hadnlecloseModel","handleincrement","tempcart","productfind","productindex","handledecrement","temcart","prodcutfind","prodcutindex","handleremoveItem","tempprodut","filter","index","removeitem","handleclear","map","tax","parsetex","parseFloat","toFixed","totlaal","componentDidMount","render","handleopen","handleclose","increment","decrement","removeItem","clear","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {storeProducts, detailProduct} from './data'\n\n\nconst ProductContext = React.createContext()\n\nclass ProductProvider extends Component {\n\n    state = {\n        products: [],\n        detailproducts: detailProduct,\n        cart :[],\n        modelOpen: false,\n        modelProdcut: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n\n    componentDidMount() {\n        this.setProducts()\n    }\n\n    setProducts = () => {\n        let products = []\n        storeProducts.forEach( item => {\n                const update = {...item}\n                products = [...products, update ]\n        } );\n        this.setState( () => {\n            return {products: products}\n        } )\n    }\n\n    handlegetitem = id => {\n        const prodcutId = this.state.products.find(item => item.id === id);\n        return prodcutId\n    }\n\n    handleDetail = (id) => {\n       \n        const product = this.handlegetitem(id)\n        this.setState( () => {\n            return {detailproducts: product}\n        })\n    }\n    handleaddTocart = (id) => {\n        let tempProducts = [...this.state.products]\n        const productIndex = tempProducts.indexOf(this.handlegetitem(id));\n        const product = tempProducts[productIndex]\n        product.count = 1;\n        product.inCart = true\n        const price = product.price;\n        product.total = price\n        this.setState(() => {\n            return { products: tempProducts, cart: [...this.state.cart, product] }\n        }, () => this.handleaddtotal())\n\n        \n       \n    }\n\n    handleopenModel = id => {\n        const product = this.handlegetitem(id)\n        this.setState( () => {\n            return {modelProdcut : product, modelOpen: true}\n        })\n    }\n\n    hadnlecloseModel = () => {\n        this.setState({modelOpen:false})\n    }\n\n    handleincrement = id => {\n        let tempcart = [...this.state.cart];\n        const productfind = tempcart.find(item => item.id ===id)\n        const productindex = tempcart.indexOf(productfind)\n        const product = tempcart[productindex]\n\n        product.count = product.count + 1;\n        product.total = product.count * product.price\n\n        this.setState(() => {\n            return {\n                cart: [...tempcart]\n            }\n        }, () => {\n            this.handleaddtotal()\n        })\n\n\n    }\n\n    handledecrement = id => {\n      \n        let temcart = [...this.state.cart]\n        const prodcutfind = temcart.find(item => item.id ===id)\n        const prodcutindex = temcart.indexOf(prodcutfind)\n        const product = temcart[prodcutindex]\n\n        product.count = product.count - 1;\n\n    }\n\n    handleremoveItem = id => {\n        let tempprodut = [...this.state.products];\n        let tempcart = [...this.state.cart];\n\n        tempcart = tempcart.filter(item => item.id !== id)\n\n        const index = tempprodut.indexOf(this.handlegetitem(id))\n\n        let removeitem = tempprodut[index]\n        removeitem.inCart = false;\n        removeitem.price = 0;\n        removeitem.total = 0;\n\n        this.setState(() => {\n            return {\n                cart: [...tempcart],\n                products: [...tempprodut]\n\n            }\n        }, () => {\n            this.handleaddtotal()\n        })\n\n    }\n\n    handleclear = () => {\n      \n        \n        this.setState(() => {\n            return {cart: []}\n        }, () => {\n            this.setProducts();\n            this.handleaddtotal()\n        })\n    }\n\n    handleaddtotal = () => {\n        let total = 0;\n        this.state.cart.map(item => total += item.total)\n        const tax = total * 0.1\n        const parsetex = parseFloat(tax.toFixed(2))\n        const totlaal = total + parsetex\n\n        this.setState({ cartSubTotal: total, cartTax: parsetex, cartTotal: totlaal })\n\n    }\n\n\n    render() {\n        return (\n\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                handleaddTocart: this.handleaddTocart,\n                handleopen : this.handleopenModel,\n                handleclose : this.hadnlecloseModel,\n                increment : this.handleincrement,\n                decrement : this.handledecrement,\n                removeItem : this.handleremoveItem,\n                clear : this.handleclear,\n\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer} \n\n\n"]},"metadata":{},"sourceType":"module"}